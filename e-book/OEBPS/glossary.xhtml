<?xml version="1.0" encoding="UTF-8" standalone="no" ?><html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta content="http://www.w3.org/1999/xhtml; charset=utf-8" http-equiv="Content-Type"/>
<link href="styles/zstylesheet.css" rel="stylesheet" type="text/css"/>
<title>Glossary</title>
</head>

<body>

	<h1 class="heading">Glossary</h1>
	<hr class="heading"/>

	<p class="noindent" id="alpha-value"><b>Alpha Value</b> - The amount of transparency for a color. In Pygame, alpha values range from 0 (completely transparent) to 255 (completely opaque).</p>
	<p class="noindent" id="anti-aliasing"><b>Anti-Aliasing</b> - A technique for making shapes look smoother and less blocky by adding fuzzy colors to their edges. Anti-aliased drawings look smooth. Aliased drawings look blocky.</p>
	<p class="noindent" id="attributes"><b>Attributes</b> - A variable that is part of an object. For example, Rect objects have members such as top and left which hold integer values for the Rect object.</p>
	<p class="noindent" id="backwards-compatibility"><b>Backwards Compatibility</b> - Writing code that is compatible with older versions of software. Python version 3 has some backwards-incompatible features with Python version 2, but it is possible to write Python 3 programs that are backwards-compatible with Python 2.</p>
	<p class="noindent" id="base-case"><b>Base Case</b> - In recursion, the base case is the condition that stops further recursive function calls. A base case is necessary to prevent stack overflow errors.</p>
	<p class="noindent" id="blitting"><b>Blitting</b> - A word that means copying the image on one Surface object to another. In programming in general, it means to copy one image to another image.</p>
	<p class="noindent" id="bounding Rectangle"><b>Bounding Rectangle</b> - The smallest rectangle that can be drawn around another shape.</p>
	<p class="noindent" id="camera"><b>Camera</b> - A view of a particular part of the game world. Cameras are used when the game world is too large to fit on the player's screen.</p>
	<p class="noindent" id="caption"><b>Caption</b> - In programming, the caption is the text on the title bar of the window. In Pygame, the caption can be set with the <span class="mono">pygame.display.set_caption()</span> function.</p>
	<p class="noindent" id="cli"><b>CLI</b> - See, Command Line Interface</p>
	<p class="noindent" id="command-line-interface"><b>Command Line Interface</b> - A program that the user can use by seeing text on the screen and typing text through the keyboard. Old computers used to be able to only run CLI programs, but new computers have Graphical User Interfaces.</p>
	<p class="noindent" id="constructor-function"><b>Constructor Function</b> - The function that creates a new object. In Python, these functions have the same name as the kind of objects they produce. For example, <span class="mono">pygame.Rect()</span> creates Rect objects.</p>
	<p class="noindent" id="display-surface"><b>Display Surface</b> - The Surface object returned by the call to <span class="mono">pygame.display.set_mode()</span>. This Surface object is special because anything drawn on it with the Pygame drawing or blitting functions will appear on the screen when <span class="mono">pygame.display.update()</span> is called.</p>
	<p class="noindent" id="drawing-primitives"><b>Drawing Primitives</b> - The name for the basic shape-drawing functions in Pygame. Drawing primitives include rectangles, lines, and ellipses. Drawing primitives do not include images like the ones in .png or .jpg files.</p>
	<p class="noindent" id="event-handling"><b>Event Handling</b> - The code that performs actions in response to Event objects that have been generated by the user, such as key presses or mouse clicks.</p>
	<p class="noindent" id="event-handling-loop"><b>Event Handling Loop</b> - The event handling code is usually inside a loop to handle each of the events that have been generated since the last time the event handling loop was executed.</p>
	<p class="noindent" id="event-queue"><b>Event Queue</b> - When events such as mouse clicks or key presses happen, Pygame stores them in an internal queue data structure. Events can be removed and retrieved from the event queue by calling <span class="mono">pygame.event.get()</span>.</p>
	<p class="noindent" id="fps"><b>FPS</b> - See, Frames Per Second</p>
	<p class="noindent" id="frame"><b>Frame</b> - A single image that is displayed on the screen as part of an animation. Animated graphics will be composed of many frames, each shown for a split second.</p>
	<p class="noindent" id="frame-rate"><b>Frame Rate</b> - See, Refresh Rate</p>
	<p class="noindent" id="frames-per-second"><b>Frames Per Second</b> - The measure of how many frames of an animation are displayed per second. It is common for games to be run at 30 frames per second or more.</p>
	<p class="noindent" id="game-loop"><b>Game Loop</b> - The game loop contains code that performs event handling, updates the game world's state, and draws the game world's state to the screen. This is done many times a second.</p>
	<p class="noindent" id="game-state"><b>Game State</b> - The entire collection of values that make up the game world. This can include information about the player's character, which pieces are on a board, or the score and level number.</p>
	<p class="noindent" id="event-handling-loop"><b>Event Handling Loop</b> - The event handling code is usually inside a loop to handle each of the events that have been generated since the last time the event handling loop was executed.</p>
	<p class="noindent" id="event-queue"><b>Event Queue</b> - When events such as mouse clicks or key presses happen, Pygame stores them in an internal queue data structure. Events can be removed and retrieved from the event queue by calling <span class="mono">pygame.event.get()</span>.</p>
	<p class="noindent" id="fps"><b>FPS</b> - See, Frames Per Second</p>
	<p class="noindent" id="frame"><b>Frame</b> - A single image that is displayed on the screen as part of an animation. Animated graphics will be composed of many frames, each shown for a split second.</p>
	<p class="noindent" id="frame-rate"><b>Frame Rate</b> - See, Refresh Rate</p>
	<p class="noindent" id="frames-per-second"><b>Frames Per Second</b> - The measure of how many frames of an animation are displayed per second. It is common for games to be run at 30 frames per second or more.</p>
	<p class="noindent" id="game-loop"><b>Game Loop</b> - The game loop contains code that performs event handling, updates the game world's state, and draws the game world's state to the screen. This is done many times a second.</p>
	<p class="noindent" id="game-state"><b>Game State</b> - The entire collection of values that make up the game world. This can include information about the player's character, which pieces are on a board, or the score and level number.</p>
	<p class="noindent" id="graphical-user-interface"><b>Graphical User Interface</b> - A program that displays graphics to the user for output and can accept keyboard presses and mouse clicks for input.</p>
	<p class="noindent" id="gui"><b>GUI</b> - See, Graphical User Interface</p>
	<p class="noindent" id="immutable"><b>Immutable</b> - Not changeable or modifiable. In Python, list values are mutable and tuple values are immutable.</p>
	<p class="noindent" id="interactive-shell"><b>Interactive Shell</b> - A program (part of IDLE) that executes Python instructions one at a time. The interactive shell is a good way to experiment with what a line of code does.</p>
	<p class="noindent" id="interpreter"><b>Interpreter</b> - The software that executes instructions written in the Python programming language. On Windows, this is python.exe. When someone says, "Python runs this program", they mean "the Python interpreter software runs this program."</p>
	<p class="noindent" id="magic-numbers"><b>Magic Numbers</b> - Integers or floating-point values used in a program without explanation. Magic numbers should be replaced by constant variables with descriptive names to increase readability.</p>
	<p class="noindent" id="main-loop"><b>Main Loop</b> - See, Game Loop</p>
	<p class="noindent" id="member-variable"><b>Member Variable</b> - See, Attributes.</p>
	<p class="noindent" id="modulus-operator"><b>Modulus Operator</b> - In Python, the modulus operator is the % sign. It performs "remainder" arithmetic. For example, since 22 / 7 is “3 remainder 1”, then 22 % 7 is 1.</p>
	<p class="noindent" id="multidimensional"><b>Multidimensional</b> - Having more than one dimension. In Python, this usually refers to when a list contains another list, or a dictionary contains a tuple (which in turn could contain other lists, tuples, or dictionaries.)</p>
	<p class="noindent" id="mutable"><b>Mutable</b> - Changeable or modifiable. In Python, list values are mutable and tuple values are immutable.</p>
	<p class="noindent" id="multidimensional"><b>Multidimensional</b> - Having more than one dimension. In Python, this usually refers to when a list contains another list, or a dictionary contains a tuple (which in turn could contain other lists, tuples, or dictionaries.)</p>
	<p class="noindent" id="mutable"><b>Mutable</b> - Changeable or modifiable. In Python, list values are mutable and tuple values are immutable.</p>
	<p class="noindent" id="pi"><b>Pi</b> - The number of diameter lengths of a circle that can fit along the outside circumference. Pi is the same number no matter what the size of the circle is. This value is available in the math module as <span class="mono">math.pi</span>, which is the float value 3.1415926535897931.</p>
	<p class="noindent" id="pixels"><b>Pixels</b> - Stands for "picture element". A pixel is a single square of color on the computer screen. The screen is made up of hundreds of thousands of pixels which can be set to different colors to form an image.</p>
	<p class="noindent" id="points"><b>Points</b> - A point in Python is usually represented as a tuple of two integers (or float values) to represent the X and Y coordinates of a position on a 2D surface.</p>
	<p class="noindent" id="properties"><b>Properties</b> - See, Attributes.</p>
	<p class="noindent" id="real-time"><b>Real-time</b> - A program that runs continuously and does not wait for the player to do something is said to run in real-time.</p>
	<p class="noindent" id="recursive-call"><b>Recursive Call</b> - The function call in a recursive function that calls that same function.</p>
	<p class="noindent" id="recursive-function"><b>Recursive Function</b> - A function that calls itself.</p>
	<p class="noindent" id="refresh-rate"><b>Refresh Rate</b> - The frequency that the computer screen updates its image. A high or fast refresh rate will make animations appear smoothly, while a low or slow refresh rate will make animation look choppy. Refresh rate is measured in FPS or hertz (which mean the same thing).</p>
	<p class="noindent" id="rgb-values"><b>RGB Values</b> - An RGB value is an exact value of a particular color. RGB stands for red, green blue. In Pygame, an RGB value is a tuple of three integers (all between 0 and 255) which represent the amount of red, green, and blue are in the color.</p>
	<p class="noindent" id="shell"><b>Shell</b> - See, Interactive Shell.</p>
	<p class="noindent" id="sine"><b>Sine</b> - A mathematical function that produces a wavey line when drawn on a graph. Python has a sine function in the math module: <span class="mono">math.sin()</span>.</p>
	<p class="noindent" id="sprites"><b>Sprites</b> - A name given for a picture of something. Games commonly have a sprite for each kind of object in the game.</p>
	<p class="noindent" id="stack-overflow"><b>Stack Overflow</b> - An error caused when a recursive function does not have a base case.</p>
	<p class="noindent" id="syntactic-sugar"><b>Syntactic Sugar</b> - A bit of code that is written to make the program more readable, even though it isn't necessary for the program to work.</p>
	<p class="noindent" id="tile-sprites"><b>Tile Sprites</b> - Tiles are a kind of sprite designed to be drawn on a 2D grid. They are usually images of the background, such as floors or walls.</p>
	<p class="noindent" id="title-bar"><b>Title Bar</b> - The bar along the top of programs that usually contain the program's caption and close button. The style of the title bar varies between operating systems.</p>
	<p class="noindent" id="x-axis"><b>X-axis</b> - The horizontal arrangement of numbers used in cartesian coordinate systems. The X coordinates get smaller going to the left and larger going to the right.</p>
	<p class="noindent" id="y-axis"><b>Y-axis</b> - The vertical arrangement of numbers used in cartesian coordinate systems. The Y coordinates get smaller going up and larger going down. (This is the opposite of how the Y-axis works in mathematics.)</p>

</body>
</html>
